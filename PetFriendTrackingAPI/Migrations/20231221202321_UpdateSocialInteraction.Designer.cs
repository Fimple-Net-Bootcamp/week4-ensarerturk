// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetFriendTrackingAPI.DBOperations;

#nullable disable

namespace PetFriendTrackingAPI.Migrations
{
    [DbContext(typeof(PetDbContext))]
    [Migration("20231221202321_UpdateSocialInteraction")]
    partial class UpdateSocialInteraction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PetAnimalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PetAnimalId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Carbohydrate")
                        .HasColumnType("integer");

                    b.Property<int>("Kalori")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Oil")
                        .HasColumnType("integer");

                    b.Property<int>("Protein")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.HealthStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PetAnimalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PetAnimalId");

                    b.ToTable("HealthStatus");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.PetAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PetAnimals");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.PetAnimalFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("FoodId")
                        .HasColumnType("integer");

                    b.Property<int>("PetAnimalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("PetAnimalId");

                    b.ToTable("PetAnimalFoods");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.SocialInteraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PetAnimalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PetAnimalId");

                    b.ToTable("SocialInteractions");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PetAnimalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PetAnimalId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.Activity", b =>
                {
                    b.HasOne("PetFriendTrackingAPI.Entities.PetAnimal", "PetAnimal")
                        .WithMany("Activities")
                        .HasForeignKey("PetAnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetAnimal");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.HealthStatus", b =>
                {
                    b.HasOne("PetFriendTrackingAPI.Entities.PetAnimal", "PetAnimal")
                        .WithMany("HealthStatus")
                        .HasForeignKey("PetAnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetAnimal");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.PetAnimal", b =>
                {
                    b.HasOne("PetFriendTrackingAPI.Entities.User", "User")
                        .WithMany("PetAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.PetAnimalFood", b =>
                {
                    b.HasOne("PetFriendTrackingAPI.Entities.Food", "Food")
                        .WithMany("PetAnimalFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetFriendTrackingAPI.Entities.PetAnimal", "PetAnimal")
                        .WithMany("PetAnimalFoods")
                        .HasForeignKey("PetAnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("PetAnimal");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.SocialInteraction", b =>
                {
                    b.HasOne("PetFriendTrackingAPI.Entities.PetAnimal", "PetAnimal")
                        .WithMany()
                        .HasForeignKey("PetAnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetAnimal");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.Training", b =>
                {
                    b.HasOne("PetFriendTrackingAPI.Entities.PetAnimal", "PetAnimal")
                        .WithMany("Trainings")
                        .HasForeignKey("PetAnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetAnimal");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.Food", b =>
                {
                    b.Navigation("PetAnimalFoods");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.PetAnimal", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("HealthStatus");

                    b.Navigation("PetAnimalFoods");

                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("PetFriendTrackingAPI.Entities.User", b =>
                {
                    b.Navigation("PetAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
